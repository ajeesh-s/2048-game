{"version":3,"sources":["context/Actions.js","services/ManageLocalStorage.js","context/Reducer.js","context/Context.js","utilities/Utils.js","components/CubicleComponent.js","assets/img/game-over.jpeg","assets/img/2048.png","assets/img/congrats.png","assets/img/high-score.jpeg","utilities/Messages.js","components/FooterComponent.js","components/HeaderComponent.js","components/GameBoardComponent.js","App.js","reportWebVitals.js","index.js"],"names":["updateGlobalState","dispatch","data","type","ManageLocalStorage","get","key","localStorage","getItem","set","dataTemp","JSON","stringify","setItem","delete","removeItem","clear","initialStateValue","parse","initialState","highScore","mileStone","GlobalReducer","action","stateValue","Error","GlobalStateContext","React","createContext","useGlobalState","context","useContext","undefined","GlobalStateProvider","children","useReducer","globalState","Provider","value","KEYS","cloneDeep","useEventHandler","event","handler","passive","useEffect","window","addEventListener","removeEventListener","isValueExist","items","isExists","i","length","some","getNewPosition","Math","floor","random","addItemsInNewPosition","newData","rand1","rand2","getColour","alertTypes","Cubicleomponent","props","className","style","background","color","showAlert","newGameOnClick","undoOnClick","swalAlert","withReactContent","Swal","fire","title","src","startImg","height","confirmButtonText","didClose","gameOverImg","showCancelButton","cancelButtonText","then","result","isConfirmed","winImg","fontSize","class","iconHtml","highScoreImg","FooterComponent","onClick","HeaderComponent","score","GameBoardComponent","START_DATA","Array","fill","map","useState","gameData","setGameData","setScore","newHighScore","useRef","lastGameData","current","maxValue","val","max","apply","getMaxValue","swipeHandlers","useSwipeable","onSwipedLeft","moveLeft","onSwipedUp","moveUp","onSwipedRight","moveRight","onSwipedDown","moveDown","preventDefaultTouchmoveEvent","trackMouse","isMove","oldData","newGameData","scoreTemp","b","slow","fast","setGameDataFromChange","checkGameOver","every","v","tabIndex","keyCode","row","rowIndex","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc49b801.chunk.js","sourcesContent":["\nexport const updateGlobalState = (dispatch,data) => {\n  dispatch({ type: 'GLOBALSTATE' ,data: data});\n}\n","export const ManageLocalStorage = {\n  get(key) {\n    if (!key) {\n      return;\n    }\n    return localStorage.getItem(key);\n  },\n  set(key, data) {\n    if (!key) {\n      return;\n    }\n    let dataTemp = data || {};\n    dataTemp = typeof dataTemp === 'string' ? data : JSON.stringify(dataTemp);\n    localStorage.setItem(key, dataTemp);\n  },\n  delete(key) {\n    if (!key) {\n      return;\n    }\n    localStorage.removeItem(key);\n  },\n  clear() {\n    localStorage.clear();\n  }\n};\n\nconst LocalStorage = {\n  ManageLocalStorage\n};\n\nexport default LocalStorage;\n","import { ManageLocalStorage } from \"../services/ManageLocalStorage\";\n\nconst initialStateValue = ManageLocalStorage.get(\"global_state\")\n  ? JSON.parse(ManageLocalStorage.get(\"global_state\"))\n  : \"\";\n\nexport const initialState = initialStateValue ? initialStateValue : {\n  highScore: 0, mileStone: 8\n};\n\nexport const GlobalReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"GLOBALSTATE\":\n      const stateValue = {\n        ...initialState,\n        ...action.data\n      };\n      ManageLocalStorage.set('global_state', stateValue);\n      return stateValue;\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};","\nimport React from \"react\";\nimport { GlobalReducer, initialState } from \"./Reducer\";\n\nconst GlobalStateContext = React.createContext();\n\nexport function useGlobalState() {\n  const context = React.useContext(GlobalStateContext);\n  if (context === undefined) {\n    throw new Error(\"useGlobalState must be used within a GlobalProvider\");\n  }\n  return context;\n}\n\nexport const GlobalStateProvider = ({ children }) => {\n  const [globalState, dispatch] = React.useReducer(GlobalReducer, initialState);\n\n  return (\n    <GlobalStateContext.Provider value={{ globalState: globalState, dispatch: dispatch }}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};","import React from \"react\";\n\nexport const KEYS = { up: 38, down: 40, left: 37, right: 39 }\n\nexport const cloneDeep = (data) => JSON.parse(JSON.stringify(data));\n\nexport const useEventHandler = (event, handler, passive = false) => {\n  React.useEffect(() => {\n    window.addEventListener(event, handler, passive);\n\n    return () => {\n      window.removeEventListener(event, handler, passive);\n    };\n  });\n};\n\nexport const isValueExist = (items, value = 0) => {// check value exists in the game data\n  let isExists = false;\n\n  for (let i = 0; i < items.length; i++) {\n    isExists = items[i].some((i) => i === value);\n    if (isExists) break;\n  }\n  return isExists;\n};\n\nexport const getNewPosition = () => { //  for getting the random position\n  const rowPosition = Math.floor(Math.random() * 4);\n  const colPosition = Math.floor(Math.random() * 4);\n  return [rowPosition, colPosition];\n};\n\n\nexport const addItemsInNewPosition = (newData) => {// add new values to random position\n  let [rand1, rand2] = getNewPosition(newData);\n\n  while (newData[rand1][rand2] !== 0) {\n    [rand1, rand2] = getNewPosition(newData);\n  }\n\n  newData[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n  return newData;\n};\n\nexport const getColour = (value) => {// for getting color of the cubicle\n  switch (value) {\n    case 2: return '#c74876';\n    case 4: return '#f9c56e';\n    case 8: return '#f83f4e';\n    case 16: return '#573a2e';\n    case 32: return '#0b95db';\n    case 64: return '#c20c59';\n    case 128: return '#b72a94';\n    case 256: return '#7f5ab3';\n    case 512: return '#274d7e';\n    case 1024: return '#36733';\n    case 2048: return '#123429';\n    default: return '#3a98a3';\n  }\n}\nexport const alertTypes = { START: 1, GAMEOVER: 2, INSTRUCTIONS: 3, WON: 4, HIGHSCORE: 5, MILESTONE:6 }\nexport const getMaxValue = (items) => {// getting max value in the game data\n  let maxValue = 0;\n  let val;\n  for (let i = 0; i < items.length; i++) {\n    val = Math.max.apply(Math, items[i].map(data => data));\n    if (maxValue<val)  maxValue =val;\n  }\n  return maxValue;\n}\n","import React from 'react';\nimport { getColour } from '../utilities/Utils';\n\nconst Cubicleomponent = (props) => {\n    const { data } = props;\n    return (\n        <div className=\"col-3 board-square\" style={{ background: getColour(data), color: data !== 0 && '#645B52' }}>\n            <div className=\"cubicle typing\">{data === 0 ? '' : data}</div>\n        </div>\n    );\n}\nexport default Cubicleomponent","export default __webpack_public_path__ + \"static/media/game-over.389117e4.jpeg\";","export default __webpack_public_path__ + \"static/media/2048.dd8482b4.png\";","export default __webpack_public_path__ + \"static/media/congrats.4598a099.png\";","export default __webpack_public_path__ + \"static/media/high-score.71ce7175.jpeg\";","import React from 'react';\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content';\nimport gameOverImg from '../assets/img/game-over.jpeg';\nimport startImg from '../assets/img/2048.png';\nimport winImg from '../assets/img/congrats.png';\nimport highScoreImg from '../assets/img/high-score.jpeg';\nimport { alertTypes } from './Utils';\n\nconst showAlert = (type, newGameOnClick, undoOnClick, mileStone) => {\n    const swalAlert = withReactContent(Swal);\n    switch (type) {\n        case alertTypes.START:\n            swalAlert.fire({\n                title: <div><img src={startImg} style={{ height: '150px' }} /><p>Welcome Let's play</p></div>,\n                confirmButtonText: 'Start Game',\n                didClose: () => newGameOnClick()\n            })\n            break;\n        case alertTypes.GAMEOVER:\n            swalAlert.fire({\n                title: <img src={gameOverImg} style={{ height: '200px' }} />,\n                showCancelButton: true,\n                cancelButtonText: 'Undo',\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    return swalAlert.fire({\n                        title: <p>Let's play again...</p>,\n                        confirmButtonText: 'Play Again',\n                        didClose: () => newGameOnClick()\n\n                    })\n                } else {\n                    undoOnClick()\n                }\n            })\n            break;\n        case alertTypes.WON:\n            swalAlert.fire({\n                title: <div><img src={winImg} style={{ height: '200px' }} /><div>You Won <div style={{fontSize:'100px'}}>&#128526;</div></div></div>\n            }).then(() => {\n                return swalAlert.fire({\n                    title: <p>Let's play again...</p>,\n                    cancelButtonText: 'Cancel',\n                    confirmButtonText: 'Play Again',\n                    didClose: () => newGameOnClick()\n\n                })\n            })\n            break;\n        case alertTypes.INSTRUCTIONS:\n            swalAlert.fire({\n                title: <div><p className=\"instructions\">HOW TO PLAY<ul class=\"square\">\n                <li>Swipe or Press arrow keys to move tiles in any direction. (&#11013; , &#11014;,  &#11013;, &#11015;)</li>\n                <li>When tiles with the same number join, they merge into one.</li>\n                <li>Make New HighScores and Milestones &#128525;</li>\n                <li>Join the tiles and get to the 2048 one! &#128077;</li>\n            </ul>Enjoy !</p></div>\n            })\n            break;\n        case alertTypes.HIGHSCORE:\n            swalAlert.fire({\n                title: <p>Wow...New High Score.</p>,\n                iconHtml: <img src={highScoreImg} style={{ height: '150px' }} />\n            })\n            break;\n        case alertTypes.MILESTONE:\n            swalAlert.fire({\n                title: <p>Wow...New Milestone Reached! <bold>{mileStone}</bold></p>,\n                iconHtml: <img src={highScoreImg} style={{ height: '150px' }} />\n            })\n            break;\n    }\n}\nexport default showAlert","import React from 'react';\nimport showAlert from '../utilities/Messages';\nimport { alertTypes } from '../utilities/Utils';\n\nconst FooterComponent = (props) => {\n    const { newGameOnClick } = props;\n    return (\n        <div className=\"header\">\n            <div class=\"d-flex justify-content-between\">\n                <div>\n                    <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={newGameOnClick}>Reset Game</button>\n                </div>\n                <div>\n                    <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={() => showAlert(alertTypes.INSTRUCTIONS, newGameOnClick)}>Instructions</button>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default FooterComponent","import React from 'react';\nimport { useGlobalState } from '../context';\nimport startImg from '../assets/img/2048.png';\n\nconst HeaderComponent = (props) => {\n    const { score } = props;\n    const globalState = useGlobalState().globalState;\n    return (\n        <>\n            <div className=\"header row\">\n                <div className=\"gamename\">\n                    <img className=\"shadow\" src={startImg} />\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n                <div>\n                    <button type=\"button\" class=\"btn btn-outline-primary shadow\">{`Score`}<h2 class=\"card-title\">{`${score}`}</h2></button>\n                </div>\n                <div>\n                    <button type=\"button\" class=\"btn btn-outline-primary shadow\">{`High Score`}<h2 class=\"card-title\">{`${globalState.highScore}`}</h2></button>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default HeaderComponent","import React from 'react';\nimport { updateGlobalState, useGlobalState } from '../context';\nimport { addItemsInNewPosition, alertTypes, cloneDeep, getMaxValue, isValueExist, KEYS, useEventHandler } from '../utilities/Utils';\nimport Cubicleomponent from './CubicleComponent';\nimport FooterComponent from './FooterComponent';\nimport HeaderComponent from './HeaderComponent';\nimport showAlert from '../utilities/Messages';\nimport { useSwipeable } from 'react-swipeable';\n\nconst GameBoardComponent = () => {\n    const WONMILESTONE = 2048;\n    const globalState = useGlobalState().globalState;\n    const dispatch = useGlobalState().dispatch;\n    const START_DATA = Array(4).fill().map(() => Array(4).fill(0));\n    const [gameData, setGameData] = React.useState(START_DATA);\n    const [score, setScore] = React.useState(0);\n    const newHighScore = React.useRef(true);\n    const lastGameData = React.useRef();\n\n    React.useEffect(() => {\n        if (score > globalState.highScore) {\n            updateGlobalState(dispatch, { highScore: score });\n            if (newHighScore.current) {\n                showAlert(alertTypes.HIGHSCORE, newGameOnClick);\n                newHighScore.current = false;\n            }\n        }\n    }, [score]);\n\n    React.useEffect(() => {\n        showAlert(alertTypes.START, newGameOnClick);\n    }, [])\n\n    React.useEffect(() => {\n        let maxValue = getMaxValue(gameData);\n        if (maxValue > globalState.mileStone) {\n            updateGlobalState(dispatch, { mileStone: maxValue });\n            showAlert(alertTypes.MILESTONE, newGameOnClick, undefined, maxValue);\n        }\n    }, [gameData])\n\n    const swipeHandlers = useSwipeable({\n        onSwipedLeft: () => moveLeft(),\n        onSwipedUp: () => moveUp(),\n        onSwipedRight: () => moveRight(),\n        onSwipedDown: () => moveDown(),\n        preventDefaultTouchmoveEvent: true,\n        trackMouse: true\n    });\n\n    const undoOnClick = () => {\n        setGameData(lastGameData.current);\n    }\n\n    const handleKeyDown = (event) => {\n        switch (event.keyCode) {\n            case KEYS.left: moveLeft();\n                break;\n            case KEYS.up: moveUp();\n                break;\n            case KEYS.right: moveRight();\n                break;\n            case KEYS.down: moveDown();\n                break;\n            default:\n                break;\n        }\n    };\n\n    const moveLeft = (isMove = true) => {\n        let oldData = gameData;\n        let newGameData = cloneDeep(gameData);\n        let scoreTemp = score;\n        for (let i = 0; i < 4; i++) {\n            let b = newGameData[i];\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n                    slow++;\n                    continue;\n                }\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        scoreTemp += b[slow];\n                        b[fast] = 0;\n                        fast = slow + 1;\n                        slow++;\n                    } else {\n                        slow++;\n                        fast = slow + 1;\n                    }\n                }\n            }\n        }\n        return setGameDataFromChange(oldData, newGameData, isMove, scoreTemp);\n\n    }\n\n    const moveUp = (isMove = true) => {\n        let b = [...gameData];\n        let oldData = cloneDeep(gameData);\n        let scoreTemp = score;\n        for (let i = 0; i < 4; i++) {\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n                    slow++;\n                    continue;\n                }\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        scoreTemp += b[slow][i];\n                        b[fast][i] = 0;\n                        fast = slow + 1;\n                        slow++;\n                    } else {\n                        slow++;\n                        fast = slow + 1;\n                    }\n                }\n            }\n        }\n        return setGameDataFromChange(oldData, b, isMove, scoreTemp);\n    };\n\n    const moveRight = (isMove = true) => {\n        let oldData = gameData;\n        let newGameData = cloneDeep(gameData);\n        let scoreTemp = score;\n        for (let i = 3; i >= 0; i--) {\n            let b = newGameData[i];\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n                    slow--;\n                    continue;\n                }\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        scoreTemp += b[slow];\n                        b[fast] = 0;\n                        fast = slow - 1;\n                        slow--;\n                    } else {\n                        slow--;\n                        fast = slow - 1;\n                    }\n                }\n            }\n        }\n        return setGameDataFromChange(oldData, newGameData, isMove, scoreTemp);\n\n    };\n\n    const moveDown = (isMove = true) => {\n        let b = [...gameData];\n        let oldData = cloneDeep(gameData);\n        let scoreTemp = score;\n        for (let i = 3; i >= 0; i--) {\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n                    slow--;\n                    continue;\n                }\n\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        scoreTemp += b[slow][i];\n                        b[fast][i] = 0;\n                        fast = slow - 1;\n                        slow--;\n                    } else {\n                        slow--;\n                        fast = slow - 1;\n                    }\n                }\n            }\n        }\n        return setGameDataFromChange(oldData, b, isMove, scoreTemp)\n    };\n\n    const setGameDataFromChange = (oldData, newGameData, isMove, scoreTemp) => {\n        if (JSON.stringify(oldData) !== JSON.stringify(newGameData)) {\n            lastGameData.current = oldData;\n            if (isValueExist(newGameData, WONMILESTONE)) {\n                setGameData(newGameData);\n                showAlert(alertTypes.WON, newGameOnClick);\n            } else newGameData = addItemsInNewPosition(newGameData);\n        } else if (isMove && checkGameOver()) {\n            showAlert(alertTypes.GAMEOVER, newGameOnClick, undoOnClick);\n        }\n\n        if (isMove) {\n            setGameData(newGameData);\n            setScore(scoreTemp);\n        } else return newGameData;\n    }\n\n    const newGameOnClick = () => {\n        let data = cloneDeep(addItemsInNewPosition(addItemsInNewPosition(START_DATA)));\n        setGameData(data);\n        setScore(0);\n    }\n\n    const checkGameOver = () => {\n        if (isValueExist(gameData, 0))\n            return false;\n        let data = [JSON.stringify(moveLeft(false)), JSON.stringify(moveUp(false)), JSON.stringify(moveRight(false)), JSON.stringify(moveDown(false))];\n        const allEqual = data.every(v => v === JSON.stringify(gameData))\n        if (allEqual) return true;\n    }\n\n    return (\n        <div className=\"container full-width\" {...swipeHandlers}>\n            <div className=\"row\">\n                <HeaderComponent {...{ score }} />\n            </div>\n            <div className=\"board-container container shadow\" tabIndex=\"-1\" >\n                {useEventHandler('keydown', handleKeyDown)}\n                <div className=\"row\">\n                    {gameData.map((data) => {\n                        return <>\n                            {\n                                data.map((row, rowIndex) => <Cubicleomponent data={row} key={`cubic-${rowIndex}`} />)\n                            }\n                        </>\n                    })\n                    }\n                </div>\n            </div>\n            <div className=\"row\">\n                <FooterComponent {...{ newGameOnClick }} />\n            </div>\n        </div>\n    );\n}\nexport default GameBoardComponent","import './App.css';\nimport './assets/css/common.css'\nimport GameBoardComponent from './components/GameBoardComponent';\nimport { GlobalStateProvider } from './context';\nfunction App() {\n  return (\n    <GlobalStateProvider>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <GameBoardComponent />\n          </div>\n        </div>\n      </div>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}