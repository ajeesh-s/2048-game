{"version":3,"sources":["services/ManageLocalStorage.js","context/Reducer.js","context/Context.js","utilities/Utils.js","components/CubicleComponent.js","assets/img/game-over.jpeg","assets/img/2048.png","assets/img/congrats.png","assets/img/high-score.jpeg","utilities/Messages.js","components/FooterComponent.js","components/HeaderComponent.js","components/GameBoardComponent.js","context/Actions.js","App.js","reportWebVitals.js","index.js"],"names":["ManageLocalStorage","get","key","localStorage","getItem","set","data","dataTemp","JSON","stringify","setItem","delete","removeItem","clear","initialStateValue","parse","initialState","highScore","GlobalReducer","action","type","stateValue","Error","GlobalStateContext","React","createContext","useGlobalState","context","useContext","undefined","GlobalStateProvider","children","useReducer","globalState","dispatch","Provider","value","KEYS","cloneDeep","useEventHandler","event","handler","passive","useEffect","window","addEventListener","removeEventListener","isValueExist","items","isExists","i","length","some","getNewPosition","Math","floor","random","addItemsInNewPosition","newData","rand1","rand2","getColour","alertTypes","Cubicleomponent","props","console","log","className","style","background","color","showAlert","newGameOnClick","swalAlert","withReactContent","Swal","fire","title","src","startImg","height","then","confirmButtonText","didClose","gameOverImg","cancelButtonText","winImg","iconHtml","highScoreImg","FooterComponent","class","onClick","HeaderComponent","score","GameBoardComponent","START_DATA","Array","fill","map","useState","gameData","setGameData","setIsWon","setScore","newHighScore","useRef","addHighScore","current","handlers","useSwipeable","onSwipedLeft","moveLeft","onSwipedUp","moveUp","onSwipedRight","moveRight","onSwipedDown","moveDown","preventDefaultTouchmoveEvent","trackMouse","isMove","oldData","newGameData","b","slow","fast","setGameDataFromChange","checkGameOver","alert","handleKeyDown","keyCode","indexOf","tabIndex","onKeyDown","row","rowIndex","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81178738.chunk.js","sourcesContent":["export const ManageLocalStorage = {\n  get(key) {\n    if (!key) {\n      return;\n    }\n    return localStorage.getItem(key);\n  },\n  set(key, data) {\n    if (!key) {\n      return;\n    }\n    let dataTemp = data || {};\n    dataTemp = typeof dataTemp === 'string' ? data : JSON.stringify(dataTemp);\n    localStorage.setItem(key, dataTemp);\n  },\n  delete(key) {\n    if (!key) {\n      return;\n    }\n    localStorage.removeItem(key);\n  },\n  clear() {\n    localStorage.clear();\n  }\n};\n\nconst LocalStorage = {\n  ManageLocalStorage\n};\n\nexport default LocalStorage;\n","import { ManageLocalStorage } from \"../services/ManageLocalStorage\";\n\nconst initialStateValue = ManageLocalStorage.get(\"global_state\")\n  ? JSON.parse(ManageLocalStorage.get(\"global_state\"))\n  : \"\";\n\nexport const initialState = initialStateValue ? initialStateValue : {\n  highScore: 0\n};\n\nexport const GlobalReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"HIGHSCORE\":\n      const stateValue = {\n        ...initialState,\n        highScore:action.data\n      };\n      ManageLocalStorage.set('global_state', stateValue);\n      return stateValue;\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};","\nimport React from \"react\";\nimport { GlobalReducer, initialState } from \"./Reducer\";\n\nconst GlobalStateContext = React.createContext();\n\nexport function useGlobalState() {\n  const context = React.useContext(GlobalStateContext);\n  if (context === undefined) {\n    throw new Error(\"useGlobalState must be used within a GlobalProvider\");\n  }\n  return context;\n}\n\nexport const GlobalStateProvider = ({ children }) => {\n  const [globalState, dispatch] = React.useReducer(GlobalReducer, initialState);\n\n  return (\n    <GlobalStateContext.Provider value={{ globalState: globalState, dispatch: dispatch }}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};","import React  from \"react\";\nexport const KEYS = {\n     up: 38,\n     down:40,\n     left:37,\n     right:39\n}\nexport const cloneDeep = (data) => JSON.parse(JSON.stringify(data));\nexport const useEventHandler = (event, handler, passive = false) => {\n    React.useEffect(() => {\n      window.addEventListener(event, handler, passive);\n  \n      return () => {\n        window.removeEventListener(event, handler, passive);\n      };\n    });\n  };\n\n  export const isValueExist = (items, value=0) => {// check value exists in the game data\n    let isExists = false;\n  \n    for (let i = 0; i < items.length; i++) {\n        isExists = items[i].some((i) => i === value);\n      if (isExists) break;\n    }\n    return isExists;\n  };\n\n  export const getNewPosition = () => { //  for getting the random position\n    const rowPosition = Math.floor(Math.random() * 4);\n    const colPosition = Math.floor(Math.random() * 4);\n    return [rowPosition, colPosition];\n  };\n\n \nexport const addItemsInNewPosition = (newData) => {// add new values to random position\n  debugger\n    let [rand1, rand2] = getNewPosition(newData);\n\n    while (newData[rand1][rand2] !== 0) {\n      [rand1, rand2] = getNewPosition(newData);\n    }\n\n    newData[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n    return newData;\n  };\n\n  export const getColour = (value) => {// for getting color of the cubicle\n    switch(value) {\n        case 2: return '#c74876';\n        case 4: return '#f9c56e';\n        case 8: return '#f83f4e';\n        case 16: return '#573a2e';\n        case 32: return '#0b95db';\n        case 64: return '#c20c59';\n        case 128: return '#b72a94';\n        case 256: return '#7f5ab3';\n        case 512: return '#274d7e';\n        case 1024: return '#36733';\n        case 2048: return '#123429';\n        default: return '#3a98a3';\n    }\n}\nexport const alertTypes = {\n  START: 1, GAMEOVER: 2, INSTRUCTIONS: 3, WON: 4, HIGHSCORE:5\n}","import React from 'react';\nimport { getColour } from '../utilities/Utils';\nconst Cubicleomponent = (props) => {\n    const {data} = props;\n    console.log(\"cube\",data)\n    return (\n        <div className=\"col-3 board-square\"  style={{ background: getColour(data), color: data !== 0 && '#645B52' }}>\n                <div className=\"cubicle\">{data===0?'':data}</div>\n        </div>\n    );\n}\nexport default Cubicleomponent","export default __webpack_public_path__ + \"static/media/game-over.389117e4.jpeg\";","export default __webpack_public_path__ + \"static/media/2048.dd8482b4.png\";","export default __webpack_public_path__ + \"static/media/congrats.4598a099.png\";","export default __webpack_public_path__ + \"static/media/high-score.71ce7175.jpeg\";","import React  from 'react';\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content';\nimport gameOverImg from '../assets/img/game-over.jpeg';\nimport startImg from '../assets/img/2048.png';\nimport winImg from '../assets/img/congrats.png';\nimport highScoreImg from '../assets/img/high-score.jpeg';\nimport { alertTypes } from './Utils';\n\nconst showAlert = (type, newGameOnClick) => {\n    const swalAlert = withReactContent(Swal);\n    switch (type) {\n        case alertTypes.START:\n            swalAlert.fire({\n                title: <div><img src={startImg} style={{ height: '150px' }} /><p>Welcome</p></div>\n            }).then(() => {\n                return swalAlert.fire({\n                    title: <p>Let's play</p>,\n                    confirmButtonText: 'Start Game',\n                    didClose: () => newGameOnClick()\n\n                })\n            })\n            break;\n        case alertTypes.GAMEOVER:\n            swalAlert.fire({\n                title: <img src={gameOverImg} style={{ height: '200px' }} />\n            }).then(() => {\n                return swalAlert.fire({\n                    title: <p>Come on play again...</p>,\n                    cancelButtonText: 'Cancel',\n                    confirmButtonText: 'Play Again',\n                    didClose: () => newGameOnClick()\n\n                })\n            })\n            break;\n        case alertTypes.WON:\n            swalAlert.fire({\n                title: <img src={winImg} style={{ height: '200px' }} />\n            }).then(() => {\n                return swalAlert.fire({\n                    title: <p>Let's play again...</p>,\n                    cancelButtonText: 'Cancel',\n                    confirmButtonText: 'Play Again',\n                    didClose: () => newGameOnClick()\n\n                })\n            })\n            break;\n        case alertTypes.INSTRUCTIONS:\n            swalAlert.fire({\n                title: <div><p className=\"instructions\">HOW TO PLAY: Use your arrow keys to move the tiles.\n                    Tiles with the same number merge into one when they touch. Add them up to reach 2048!</p></div>\n            })\n            break;\n        case alertTypes.HIGHSCORE:\n            swalAlert.fire({\n                title: <p>Wow...New High Score.</p>,\n                iconHtml: <img src={highScoreImg} style={{height:'150px'}}/>\n            })\n            break;\n    }\n}\nexport default showAlert","import React from 'react';\nimport showAlert from '../utilities/Messages';\nimport { alertTypes } from '../utilities/Utils';\nconst FooterComponent = (props) => {\n    const { newGameOnClick } = props;\n    return (\n        <div className=\"header\">\n            <div class=\"d-flex justify-content-between\">\n                <div>\n                    <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={newGameOnClick}>Reset Game</button>\n                </div>\n                <div>\n                    <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={()=>showAlert(alertTypes.INSTRUCTIONS,newGameOnClick)}>Instructions</button>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default FooterComponent","import React from 'react';\nimport { useGlobalState } from '../context';\nimport startImg from '../assets/img/2048.png';\n\nconst HeaderComponent = (props) => {\n    const { score } = props;\n    const globalState = useGlobalState().globalState;\n    console.log(globalState)\n    return (\n        <>\n            <div className=\"header row\">\n                <div className=\"gamename\">\n                    <img src={startImg} style={{ height: '150px' }} />\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n                <div>\n                    <button type=\"button\" class=\"btn btn-outline-primary\">{`Score:`}<h2 class=\"card-title\">{`${score}`}</h2></button>\n                </div>\n                <div>\n                    <button type=\"button\" class=\"btn btn-outline-primary\">{`High Score:`}<h2 class=\"card-title\">{`${globalState.highScore}`}</h2></button>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default HeaderComponent","import React from 'react';\nimport { addHighScore, useGlobalState } from '../context';\nimport { addItemsInNewPosition, alertTypes, cloneDeep, isValueExist, KEYS, useEventHandler } from '../utilities/Utils';\nimport Cubicleomponent from './CubicleComponent';\nimport FooterComponent from './FooterComponent';\nimport HeaderComponent from './HeaderComponent';\nimport showAlert  from '../utilities/Messages';\nimport { useSwipeable } from 'react-swipeable';\n\nconst GameBoardComponent = () => {\n    const globalState = useGlobalState().globalState;\n    const dispatch = useGlobalState().dispatch;\n    const START_DATA = Array(4).fill().map(() => Array(4).fill(0));\n    const [gameData, setGameData] = React.useState(START_DATA);\n    const [isWon, setIsWon] = React.useState(false);\n    const [score, setScore] = React.useState(0);\n    const newHighScore = React.useRef(true);\n    React.useEffect(() => {\n        if (score > globalState.highScore) {\n            addHighScore(dispatch, score);\n            if (newHighScore.current) {\n                showAlert(alertTypes.HIGHSCORE,newGameOnClick);\n                newHighScore.current = false;\n            }\n        }\n    }, [score])\n    React.useEffect(() => {\n        showAlert(alertTypes.START,newGameOnClick);\n    }, [])\n    const handlers = useSwipeable({\n        onSwipedLeft: () => moveLeft(),\n        onSwipedUp: () => moveUp(),\n        onSwipedRight: () => moveRight(),\n        onSwipedDown: () => moveDown(),\n        preventDefaultTouchmoveEvent: true,\n        trackMouse: true\n      });\n    const moveLeft = (isMove = true) => {\n        debugger\n        let oldData = gameData;\n        let newGameData = cloneDeep(gameData);\n\n        // if (replayStatus) {\n        //   return;\n        // }\n\n        // if (undoMoves.length) {\n        //   setUndoMoves([]);\n        // }\n\n        for (let i = 0; i < 4; i++) {\n            let b = newGameData[i];\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n                    slow++;\n                    continue;\n                }\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        setScore(score + b[slow]);\n                        b[fast] = 0;\n                        fast = slow + 1;\n                        slow++;\n                    } else {\n                        slow++;\n                        fast = slow + 1;\n                    }\n                }\n            }\n        }\n        return setGameDataFromChange(oldData, newGameData, isMove);\n\n    }\n    const moveUp = (isMove = true) => {\n        let b = [...gameData];\n        let oldData = cloneDeep(gameData)\n\n        // if (replayStatus) {\n        //   return;\n        // }\n\n        // if (undoMoves.length) {\n        //   setUndoMoves([]);\n        // }\n\n        for (let i = 0; i < 4; i++) {\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n                    slow++;\n                    continue;\n                }\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        setScore(score + b[slow][i]);\n                        b[fast][i] = 0;\n                        fast = slow + 1;\n                        slow++;\n                    } else {\n                        slow++;\n                        fast = slow + 1;\n                    }\n                }\n            }\n        }\n        return setGameDataFromChange(oldData, b, isMove);\n    };\n    const moveRight = (isMove = true) => {\n        let oldData = gameData;\n        let newGameData = cloneDeep(gameData);\n\n        // if (replayStatus) {\n        //   return;\n        // }\n\n        // if (undoMoves.length) {\n        //   setUndoMoves([]);\n        // }\n\n        for (let i = 3; i >= 0; i--) {\n            let b = newGameData[i];\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n                    slow--;\n                    continue;\n                }\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        setScore(score + b[slow]);\n                        b[fast] = 0;\n                        fast = slow - 1;\n                        slow--;\n                    } else {\n                        slow--;\n                        fast = slow - 1;\n                    }\n                }\n            }\n        }\n        return setGameDataFromChange(oldData, newGameData, isMove);\n\n    };\n\n    const moveDown = (isMove = true) => {\n        let b = [...gameData];\n        let oldData = cloneDeep(gameData);\n\n        // if (replayStatus) {\n        //   return;\n        // }\n\n        // if (undoMoves.length) {\n        //   setUndoMoves([]);\n        // }\n\n        for (let i = 3; i >= 0; i--) {\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n                    slow--;\n                    continue;\n                }\n\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        setScore(score + b[slow][i]);\n                        b[fast][i] = 0;\n                        fast = slow - 1;\n                        slow--;\n                    } else {\n                        slow--;\n                        fast = slow - 1;\n                    }\n                }\n            }\n        }\n        return setGameDataFromChange(oldData, b, isMove)\n    };\n    const setGameDataFromChange = (oldData, newGameData, isMove) => {\n        if (JSON.stringify(oldData) !== JSON.stringify(newGameData)) {\n            //setMoveHistory([...moveHistory, oldGrid]);\n            if (isValueExist(newGameData, 2048)) {\n                setIsWon(true);\n                setGameData(newGameData);\n                showAlert(alertTypes.WON,newGameOnClick);\n            } else newGameData = addItemsInNewPosition(newGameData);\n        } else if (isMove && checkGameOver()) {\n            alert('Game Over');\n            //showAlert(alertTypes.GAMEOVER,newGameOnClick);\n        }\n\n        if (isMove) {\n            setGameData(newGameData);\n        } else return newGameData;\n    }\n    const handleKeyDown = (event) => {\n        switch (event.keyCode) {\n            case KEYS.left:\n                moveLeft();\n                break;\n            case KEYS.up:\n                moveUp();\n                break;\n            case KEYS.right:\n                moveRight();\n                break;\n            case KEYS.down:\n                moveDown();\n                break;\n            default:\n                break;\n        }\n    };\n    const newGameOnClick = () => {\n        let data = cloneDeep(addItemsInNewPosition(addItemsInNewPosition(START_DATA)));\n        debugger\n        setGameData(data);\n        setScore(0);\n    }\n    const checkGameOver = () => {\n        if (isValueExist(gameData, 0))\n            return false;\n        let data = [JSON.stringify(moveLeft(false)), JSON.stringify(moveUp(false)), JSON.stringify(moveRight(false)), JSON.stringify(moveDown(false))];\n        if (data.indexOf(JSON.stringify(gameData)) === -1) {\n            return false;\n        } else return true;\n    }\n    return (\n        <div className=\"container full-width\" {...handlers}>\n            <div className=\"row\">\n                <HeaderComponent {...{ score }} />\n            </div>\n            <div className=\"board-container container\" tabIndex=\"-1\" onKeyDown={handleKeyDown}>\n                {useEventHandler('keydown', handleKeyDown)}\n                <div className=\"row\">\n                    {gameData.map((data) => {\n                        return <>\n                            {\n                                data.map((row, rowIndex) => <Cubicleomponent data={row} key={`cubic-${rowIndex}`} />)\n                            }\n                        </>\n                    })\n                    }\n                </div>\n            </div>\n            <div className=\"row\">\n                <FooterComponent {...{ newGameOnClick }} />\n            </div>\n        </div>\n    );\n}\nexport default GameBoardComponent","\nexport const addHighScore = (dispatch,score) => {\n  dispatch({ type: 'HIGHSCORE' ,data: score});\n}","import './App.css';\nimport './assets/css/common.css'\nimport GameBoardComponent from './components/GameBoardComponent';\nimport { GlobalStateProvider } from './context';\nfunction App() {\n  return (\n    <GlobalStateProvider>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <GameBoardComponent />\n          </div>\n        </div>\n      </div>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}